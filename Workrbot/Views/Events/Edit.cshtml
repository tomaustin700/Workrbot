@model Workrbot.Classes.EventDTO

@{
    ViewBag.Title = "Edit";
}



<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js">
</script>
<script>
    $(document).ready(function () {
        $('#eventTrigger').load('load', function () {
            if (this.value == 1)
                //.....................^.......
            {
                $("#actionField").hide();
            }
            else {
                $("#actionField").show();
            }

        });

        $('#eventTrigger').on('change', function () {
            if (this.value == 1)
                //.....................^.......
            {
                $("#actionField").hide();
            }
            else {
                $("#actionField").show();
            }

        });
    });
</script>

<h3>Edit</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
     

        <div class="form-group">
            @Html.Label("Id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventId, new { htmlAttributes = new { @class = "form-control", @readonly="readonly" }  })
                @Html.ValidationMessageFor(model => model.EventId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.Label("Work Item Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.WorkItemType, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EnumDropDownListFor(x => x.WorkItemType, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WorkItemType, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Trigger", htmlAttributes: new { @class = "control-label col-md-2", })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.EventTrigger, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EnumDropDownListFor(x => x.EventTrigger, new { @class = "form-control", @id = "eventTrigger" })
                @Html.ValidationMessageFor(model => model.EventTrigger, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group" id="actionField">
            @Html.Label("Field", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.WorkItemActionField, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EnumDropDownListFor(x => x.WorkItemActionField, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.WorkItemActionField, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Secondary Trigger", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SecondaryTrigger, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.EnumDropDownListFor(x => x.SecondaryTrigger, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SecondaryTrigger, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Secondary Trigger Value", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecondaryTriggerActionValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecondaryTriggerActionValue, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Moderator Reply", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Tag User?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TagUser)
                    @Html.ValidationMessageFor(model => model.TagUser, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Project, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


